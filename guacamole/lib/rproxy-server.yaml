heat_template_version: 2018-08-31

description: >
  HOT template for a Apache webserver acting as a rproxy for guacamole

parameters:
  server_name:
    type: string
    description: Hostname of server
  image:
    type: string
    description: Name of OS image
  flavor:
    type: string
    description: Flavor for server
  key_name:
    type: string
    description: Default SSH key
  network:
    type: string
    description: Name or ID for network the VM should connect to
  ip:
    type: string
    description: Static IPv4 address
  v4_subnet:
    type: string
    description: ID of v4 subnet
  v6_subnet:
    type: string
    description: ID of v4 subnet
  sec_groups:
    type: comma_delimited_list
    description: List of default security groups
  external_net:
    type: string
    description: Name or ID of the floating IP pool
  admin_email:
    type: string
    description: Admin email for Apache config
  guacamole_fqdn:
    type: string
    description: FQDN for guacamole web access
  guacamole_host:
    type: string
    description: Guacamole-server IP address
  tls_key:
    type: string
    description: Private key for TLS cert
  tls_cert:
    type: string
    description: TLS certificate
  cert_chain:
    type: string
    description: Certificate for CA

resources:
  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: server_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: rproxy.bash }
          params:
            <%ADMIN_EMAIL%>: { get_param: admin_email }
            <%GUACAMOLE_FQDN%>: { get_param: guacamole_fqdn }
            <%GUACAMOLE_HOST%>: { get_param: guacamole_host }
            <%TLS_KEY%>: { get_param: tls_key }
            <%TLS_CERT%>: { get_param: tls_cert }
            <%CERT_CHAIN%>: { get_param: cert_chain }

  server_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: v4_subnet }
          ip_address: { get_param: ip }
        - subnet_id: { get_param: v6_subnet }
      security_groups: { get_param: sec_groups }

  server_fip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_net }
      port_id: { get_resource: server_port }
