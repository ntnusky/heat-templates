---
heat_template_version: wallaby

description: >
  Deploy a simple Apache Guacamole setup, including an Apache webserver
  as reverse proxy, the Apache Guacamole software itself, and a MySQL database

parameters:
  environment:
    type: string
    description: Which environemnt we are deploying
  key_name:
    type: string
    description: SSH-key for all servers
  os_image:
    type: string
    description: Default OS for all server
    default: Ubuntu Server 22.04 LTS (Jammy Jellyfish) amd64
  external_net:
    type: string
    description: ID or name of external net for router
    default: ntnu-global
  guac_net_name:
    type: string
    description: Name of guacamole internal network
    default: guacamole-network
  ipv6_subnetpool:
    type: string
    description: ID for default IPv6 subnet pool
  admin_networks_v4:
    type: comma_delimited_list
    label: admin_networks_v4
    description: A list of IPv4 networks that will be allowed SSH access
  admin_networks_v6:
    type: comma_delimited_list
    label: admin_networks_v6
    description: A list of IPv6 networks that will be allowed SSH access
  admin_email:
    type: string
    description: Admin email for Apache config
    default: admin@example.com
  allow_web_from_v4:
    type: comma_delimited_list
    description: List of IPv4 networks to allow web traffic from
    default: "0.0.0.0/0"
  allow_web_from_v6:
    type: comma_delimited_list
    description: List of IPv6 networks to allow web traffic from
    default: "::/0"
  ntnu_admin_group:
    type: string
    description: BAS group for server admins, allowing ssh and sudo
  munin_server_v4:
    type: string
    description: IPv4 address of munin hosts
    default: "127.0.0.1/32"
  munin_server_v6:
    type: string
    description: IPv6 address of munin hosts
    default: "::1/128"
  rproxy_flavor:
    type: string
    description: Flavor for Apache Webserver
    default: gx1.2c4r
  guacamole_flavor:
    type: string
    description: Flavor for Apache Guacamole server
    default: gx3.8c32r
  guacamole_fqdn:
    type: string
    description: FQDN for guacamole web access
  db_flavor:
    type: string
    description: Flavor for MySQL server
    default: gx1.2c4r
  db_root_password:
    type: string
    description: MySQL root password
    hidden: true
  db_guacamole_password:
    type: string
    description: MySQL guacamole_user password
    hidden: true
  ldap_host:
    type: string
    description: LDAP host to auth with
  ldap_user_base:
    type: string
    description: OU with users
  ldap_group_base:
    type: string
    description: OU with groups
  ldap_group_search_filter:
    type: string
    description: Search filter for groups
  ldap_member_attribute:
    type: string
    description: LDAP attribute for group members (default is assuming OpenLDAP)
    default: memberUid
  ldap_member_attribute_type:
    type: string
    description: LDAP attribute type for group members (default is assuming OpenLDAP)
    default: uid
  ldap_user_attributes:
    type: string
    description: Which LDAP attributes to import for a user (default is assuming OpenLDAP)
    default: cn,givenName,sn,mail
  tls_key:
    type: string
    description: Private key for TLS cert
    hidden: true
  tls_cert:
    type: string
    description: TLS certificate
  cert_chain:
    type: string
    description: Certificate for CA

resources:
  guac-servers:
    type: guac-servers.yaml
    depends_on: guac_net
    properties:
      environment: { get_param: environment }
      key_name: { get_param: key_name }
      os_image: { get_param: os_image }
      network: { get_resource: guac_net }
      v4_subnet: { get_resource: guac_subnet_v4 }
      v6_subnet: { get_resource: guac_subnet_v6 }
      external_net: { get_param: external_net }
      sec_groups:
        - default
        - { get_resource: sg_linux_v4 }
        - { get_resource: sg_linux_v6 }
        - { get_resource: sg_munin }
      sec_groups_web:
        - { get_resource: sg_web_rules_v4 }
        - { get_resource: sg_web_rules_v6 }
      munin_server_v4: { get_param: munin_server_v4 }
      munin_server_v6: { get_param: munin_server_v6 }
      rproxy_flavor: { get_param: rproxy_flavor }
      rproxy_ip: 192.168.100.20
      admin_email: { get_param: admin_email }
      ntnu_admin_group: { get_param: ntnu_admin_group }
      guacamole_flavor: { get_param: guacamole_flavor }
      guacamole_ip: 192.168.100.21
      guacamole_fqdn: { get_param: guacamole_fqdn }
      db_flavor: { get_param: db_flavor }
      db_ip: 192.168.100.22
      db_root_password: { get_param: db_root_password }
      db_guacamole_password: { get_param: db_guacamole_password }
      ldap_host: { get_param: ldap_host }
      ldap_user_base: { get_param: ldap_user_base }
      ldap_group_base: { get_param: ldap_group_base }
      ldap_group_search_filter: { get_param: ldap_group_search_filter }
      ldap_member_attribute: { get_param: ldap_member_attribute }
      ldap_member_attribute_type: { get_param: ldap_member_attribute_type }
      ldap_user_attributes: { get_param: ldap_user_attributes }
      tls_key: { get_param: tls_key }
      tls_cert: { get_param: tls_cert }
      cert_chain: { get_param: cert_chain }

  # Networking
  guac_net:
    type: OS::Neutron::Net
    properties:
      name: { list_join: ['-', [ { get_param: environment }, { get_param: guac_net_name }]]}

  guac_subnet_v4:
    type: OS::Neutron::Subnet
    properties:
      name: { list_join: ['-', [ { get_param: environment }, guacamole-v4 ]]}
      network: { get_resource: guac_net }
      cidr: 192.168.100.0/24
      gateway_ip: 192.168.100.1
      allocation_pools:
        - start: 192.168.100.10
          end: 192.168.100.254

  guac_subnet_v6:
    type: OS::Neutron::Subnet
    properties:
      name: { list_join: ['-', [ { get_param: environment }, guacamole-v6 ]]}
      network: { get_resource: guac_net }
      ip_version: 6
      ipv6_address_mode: slaac
      ipv6_ra_mode: slaac
      subnetpool: { get_param: ipv6_subnetpool }

  guac_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: external_net }

  guac_router_interface_v4:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: guac_router }
      subnet_id: { get_resource: guac_subnet_v4 }

  guac_router_interface_v6:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: guac_router }
      subnet_id: { get_resource: guac_subnet_v6 }

# Security groups
  sg_linux_v4:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Common rules for Linux servers
      rules:
        repeat:
          for_each:
            <%net%>: { get_param: admin_networks_v4 }
          template:
            protocol: tcp
            port_range_min: 22
            port_range_max: 22
            remote_ip_prefix: <%net%>

  sg_linux_v6:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Common rules for Linux servers
      rules:
        repeat:
          for_each:
            <%net%>: { get_param: admin_networks_v6 }
          template:
            protocol: tcp
            ethertype: IPv6
            port_range_min: 22
            port_range_max: 22
            remote_ip_prefix: <%net%>

  sg_linux_in4_icmp:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: sg_linux_v4 }
      protocol: icmp
      remote_ip_prefix: 0.0.0.0/0

  sg_linux_in6_icmp:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: sg_linux_v6 }
      ethertype: IPv6
      protocol: icmpv6
      remote_ip_prefix: ::/0

  sg_web_rules_v4:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Allow HTTP/HTTPS for given networks
      rules:
        repeat:
          for_each:
            <%net%>: { get_param: allow_web_from_v4 }
            <%port%>: [ "80", "443" ]
          template:
            protocol: tcp
            ethertype: IPv4
            port_range_min: <%port%>
            port_range_max: <%port%>
            remote_ip_prefix: <%net%>

  sg_web_rules_v6:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Allow HTTP/HTTPS for given networks
      rules:
        repeat:
          for_each:
            <%net%>: { get_param: allow_web_from_v6 }
            <%port%>: [ "80", "443" ]
          template:
            protocol: tcp
            ethertype: IPv6
            port_range_min: <%port%>
            port_range_max: <%port%>
            remote_ip_prefix: <%net%>

  sg_munin:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Allow munin traffic from defined munin-servers
      rules:
        - protocol: tcp
          ethertype: IPv4
          port_range_min: 4949
          port_range_max: 4949
          remote_ip_prefix: { get_param: munin_server_v4 }
        - protocol: tcp
          ethertype: IPv6
          port_range_min: 4949
          port_range_max: 4949
          remote_ip_prefix: { get_param: munin_server_v6 }
